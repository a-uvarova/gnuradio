#!/bin/bash
# DISPLAY and XAUTHORITY allow running X11 apps
# PULSE_SERVER and PULSE_COOKIE give the container access to PulseAudio
# -v /home/w1xm-admin:/home/w1xm-admin makes the home directory accessible inside the container.
# --privileged gives access to USB devices (--device /dev/bus/usb/004/069 would also work, but would require that we ID all the devices we care about)
# --ipc=host gives access to SHM so waterfalls work
# --net=host gives access to the X11 socket as well as allows binding servers
# -it runs interactively with a tty so the stdin/stdout work
# w1xm/base is the name of the container to run in

TAG=w1xm/base

TEMP=$(getopt -o +t: --long tag:,extra-args: -n grrun -- "$@")

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
        case "$1" in
	    -t|--tag) TAG="$2"; shift 2 ;;
	    --extra-args) EXTRA="$2"; shift 2 ;;
	    --) shift ; break ;;
	    *) echo "Internal error!" ; exit 1 ;;
	esac
done

TTY=""
if [ -t 0 ] ; then
    TTY="-t"
fi

PULSE_SOCKET=/run/user/$UID/pulse/native
case "$PULSE_SERVER" in
    unix:*)
	PULSE_SOCKET=${PULSE_SERVER#unix:}
	;;
esac

exec docker run \
     -e DISPLAY -v ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority \
     -e PULSE_SERVER=unix:/pulse/socket -e PULSE_COOKIE=/pulse/cookie -v $PULSE_SOCKET:/pulse/socket -v $HOME/.config/pulse/cookie:/pulse/cookie \
     -v $HOME:$HOME \
     -v /srv/wsjtx:/root/.local/share/WSJT-X \
     -w "$PWD" \
     -e RCI_ADDRESS -e RCI_PASSWORD \
     --privileged --net=host --ipc=host -i $TTY ${EXTRA:-} "$TAG" "$@"
